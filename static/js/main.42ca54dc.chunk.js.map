{"version":3,"sources":["components/Selector.tsx","components/Reset.tsx","components/Advanced.tsx","utils/lightingEffect.ts","components/Basic.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["query","gql","Selector","props","client","useApolloClient","state","useQuery","data","options","undefined","category","map","item","reduce","prev","curr","index","indexOf","sort","a","b","value","label","Object","keys","filter","length","slice","Fragment","isDisabled","target","x","onChange","option","writeData","__typename","y","z","Reset","Button","size","color","variant","onClick","xt","zt","Advanced","ref","useRef","useState","tooltip","setTooltip","node","setNode","highlights","setHighlights","targetData","nestedData","getColor","str","hue","toString","charCodeAt","getFreqency","children","title","includes","style","fillOpacity","array","freqData","plotData","useEffect","Grid","container","animation","hideRootNode","width","height","padAngle","onValueMouseOver","path","getTooltip","parent","reverse","console","log","join","split","replace","onValueMouseOut","strokeOpacity","yOffset","labelAnchorX","fontSize","backgroundColor","padding","justify","direction","position","margin","Typography","ambientLight","AmbientLight","intensity","pointLight1","PointLight","pointLight2","lightingEffect","LightingEffect","material","ambient","diffuse","shininess","specularColor","colorRange","useStyles","makeStyles","Basic","classes","hoveredObject","pointerX","pointerY","setState","threshold","setThreshold","lat","Number","Y","lng","X","React","latitude","longitude","zoom","pitch","bearing","view","setView","hexagon","HexagonLayer","id","coverage","pickable","elevationRange","elevationScale","extruded","getPosition","obj","radius","upperPercentile","onHover","object","Box","className","viewState","layers","effects","controller","onViewStateChange","mapboxApiAccessToken","mapStyle","zIndex","left","top","elevationValue","Slider","defaultValue","max","min","_event","cache","InMemoryCache","ApolloClient","appBar","fontFamily","textAlign","header","borderBottom","vis","borderTop","App","AppBar","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.42ca54dc.chunk.js","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useApolloClient, useQuery } from \"@apollo/react-hooks\";\nimport Select from \"react-select\";\nimport { gql } from \"apollo-boost\";\n\ntype SelectorProps = {\n  data: object[];\n  category?: string;\n  target: string;\n};\n\nconst query = gql`\n  query @client {\n    x {\n      value\n      __typename\n    }\n    y {\n      value\n      __typename\n    }\n    z {\n      value\n      __typename\n    }\n  }\n`;\n\nconst Selector: React.FC<SelectorProps> = props => {\n  const client = useApolloClient();\n  const { data: state } = useQuery(query);\n\n  const toggle = (option: any) => {\n    client.writeData({\n      data: {\n        [props.target]: { value: option.value, __typename: \"selection\" }\n      }\n    });\n    if (props.target === \"x\") {\n      client.writeData({\n        data: {\n          y: { value: \"\", __typename: \"selection\" },\n          z: { value: \"\", __typename: \"selection\" }\n        }\n      });\n    }\n  };\n\n  let options =\n    props.category !== undefined\n      ? props.data\n          .map(item => item[props.category! as keyof typeof props.data[0]])\n          .reduce((prev: any, curr: any, index: any) => {\n            return prev.indexOf(curr) > -1 ? prev : [...prev, curr];\n          }, [])\n          .sort((a: any, b: any) => (a > b ? 1 : -1))\n          .map((item: any) => ({\n            value: item,\n            label: item\n          }))\n      : Object.keys(props.data[0])\n          .filter(item => item !== \"IncidntNum\")\n          .sort((a: any, b: any) => (a > b ? 1 : -1))\n          .map(item => ({\n            value: item,\n            label: item\n          }));\n\n  if (options.length > 101) {\n    options = options.slice(0, 100);\n  }\n\n  return (\n    <React.Fragment>\n      <Select\n        isDisabled={props.target !== \"x\" && state.x.value === \"\"}\n        options={options}\n        onChange={toggle}\n        value={\n          state[props.target] === \"\"\n            ? { value: null, label: null }\n            : {\n                value: state[props.target].value,\n                label: state[props.target].value\n              }\n        }\n      />\n    </React.Fragment>\n  );\n};\n\nexport default Selector;\n","import React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport { useApolloClient } from \"@apollo/react-hooks\";\n\ntype Props = {};\n\nconst Reset: React.FC<Props> = (props: Props) => {\n  const client = useApolloClient();\n  const click = () => {\n    client.writeData({\n      data: {\n        x: { value: \"\", __typename: \"selection\" },\n        y: { value: \"\", __typename: \"selection\" },\n        z: { value: \"\", __typename: \"selection\" },\n        xt: { value: \"\", __typename: \"selection\" },\n        zt: { value: \"\", __typename: \"selection\" }\n      }\n    });\n  };\n\n  return (\n    <>\n      <Button\n        size={\"large\"}\n        color={\"primary\"}\n        variant={\"contained\"}\n        onClick={click}\n      >\n        Reset\n      </Button>\n    </>\n  );\n};\n\nexport default Reset;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { Sunburst, LabelSeries } from \"react-vis\";\nimport * as NestHydrationJS from \"nesthydrationjs\";\nimport Selector from \"./Selector\";\nimport { gql } from \"apollo-boost\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport { Grid, Typography } from \"@material-ui/core\";\nimport Reset from \"./Reset\";\n\ntype Props = { data: any[] };\n\nconst query = gql`\n  query @client {\n    x {\n      value\n      __typename\n    }\n    y {\n      value\n      __typename\n    }\n    xt {\n      value\n      __typename\n    }\n    zt {\n      value\n      __typename\n    }\n  }\n`;\n\nconst Advanced: React.FC<Props> = (props: Props) => {\n  const ref = useRef(null);\n\n  const [tooltip, setTooltip] = useState([\"root\"]);\n  const [node, setNode] = useState<any>(false);\n  const [highlights, setHighlights] = useState([] as string[]);\n\n  const { data } = useQuery(query);\n  const x = data.x.value;\n  const y = data.y.value;\n  const targetData =\n    data.xt.value !== \"\" && data.zt.value !== \"\"\n      ? props.data.filter(\n          item =>\n            item[data.xt.value as keyof typeof props.data[0]] === data.zt.value\n        )\n      : props.data;\n\n  let nestedData = null;\n\n  const getColor = (str: string | number) => {\n    const hue = (str.toString().charCodeAt(0) * 147) % 360;\n    return `hsl(${hue}, 75%, 60%)`;\n  };\n  const getFreqency = (item: any) => {\n    return item.children.reduce(\n      (prev: number, curr: any) => prev + curr.size,\n      0\n    );\n  };\n\n  if (x !== \"\") {\n    if (y !== \"\") {\n      nestedData = targetData\n        .map(item => ({ x: item[x], y: item[y] }))\n        .reduce((prev: any, curr: any, index: any) => {\n          if (prev.map((item: any) => item.title).includes(curr.x)) {\n            if (\n              prev\n                .filter((item: any) => item.title === curr.x)[0]\n                .children.map((item: any) => item.title)\n                .includes(curr.y)\n            ) {\n              prev\n                .filter((item: any) => item.title === curr.x)[0]\n                .children.filter(\n                  (item: any) => item.title === curr.y\n                )[0].size += 1;\n            } else {\n              prev.filter((item: any) => item.title === curr.x)[0].children = [\n                ...prev.filter((item: any) => item.title === curr.x)[0]\n                  .children,\n                {\n                  title: curr.y,\n                  category: y,\n                  size: 1,\n                  color: getColor(curr.y),\n                  style: {\n                    fillOpacity: highlights.includes(curr.y) ? 1 : 0.25\n                  }\n                }\n              ];\n            }\n          } else {\n            prev = [\n              ...prev,\n              {\n                title: curr.x,\n                category: x,\n                color: getColor(curr.x),\n                style: {\n                  fillOpacity: highlights.includes(curr.x) ? 1 : 0.25\n                },\n                children: [\n                  {\n                    title: curr.y,\n                    category: y,\n                    size: 1,\n                    color: getColor(curr.y),\n                    style: {\n                      fillOpacity: highlights.includes(curr.y) ? 1 : 0.25\n                    }\n                  }\n                ]\n              }\n            ];\n          }\n          return prev;\n        }, []);\n\n      nestedData.sort((a: any, b: any) =>\n        getFreqency(a) > getFreqency(b) ? -1 : 1\n      );\n      if (nestedData.length > 25) {\n        nestedData = nestedData.slice(0, 25);\n      }\n      nestedData.map((item: any) => {\n        const array = item.children.sort((a: any, b: any) =>\n          a.size > b.size ? -1 : 1\n        );\n        item.children = array.length > 25 ? array.slice(0, 25) : array;\n      });\n    } else {\n      nestedData = targetData\n        .map(item => ({ x: item[x], y: item[y] }))\n        .reduce((prev: any, curr: any, index: any) => {\n          if (prev.map((item: any) => item.title).includes(curr.x)) {\n            prev.filter((item: any) => item.title === curr.x)[0].size += 1;\n          } else {\n            prev = [\n              ...prev,\n              {\n                title: curr.x,\n                category: x,\n                size: 1,\n                color: getColor(curr.x),\n                style: {\n                  fillOpacity: highlights.includes(curr.x) ? 1 : 0.25\n                }\n              }\n            ];\n          }\n          return prev;\n        }, []);\n      nestedData.sort((a: any, b: any) => (a.size > b.size ? -1 : 1));\n      if (nestedData.length > 25) {\n        nestedData = nestedData.slice(0, 25);\n      }\n    }\n  }\n\n  let freqData = nestedData;\n  // while (freqData[0].size === undefined) freqData = aggregate(freqData);\n  const plotData = {\n    title: \"root\",\n    category: \"root\",\n    size:\n      y !== \"\"\n        ? freqData.reduce((prev: number, curr: any) => prev + curr.size, 0)\n        : undefined,\n    children: freqData,\n    style: {\n      fillOpacity: 0.2\n    }\n  };\n\n  const getTooltip = (node: any): string[] => {\n    if (node.parent === null) {\n      return [\"root\"];\n    } else {\n      if (node.data) {\n        return [\n          `> ${node.data.category}<${node.data.title}>`,\n          ...getTooltip(node.parent)\n        ];\n      } else {\n        return [\n          `> ${node.category}<${node.title}>`,\n          ...getTooltip(node.parent)\n        ];\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (x === \"\" && y === \"\") setTooltip([\"root\"]);\n  }, [x, y]);\n\n  const onValueMouseOver = (node: any) => {\n    const path = getTooltip(node);\n    setNode(node);\n    setTooltip(path.reverse());\n    console.log(\n      path\n        .join(\"\")\n        .split(\"> \")\n        .slice(1)\n        .map(item => item.replace(/.*<(.*)>/g, \"$1\"))\n    );\n    setHighlights(\n      path\n        .join(\"\")\n        .split(\"> \")\n        .slice(1)\n        .map(item => item.replace(/.*<(.*)>/g, \"$1\"))\n    );\n  };\n\n  const onValueMouseOut = () => {\n    setNode(false);\n    setTooltip([\"root\"]);\n    setHighlights([]);\n  };\n\n  return (\n    <div ref={ref}>\n      <Grid container>\n        <Sunburst\n          animation\n          hideRootNode={x !== \"\"}\n          data={plotData}\n          width={1280}\n          height={720}\n          padAngle={0.005}\n          onValueMouseOver={onValueMouseOver}\n          onValueMouseOut={onValueMouseOut}\n          style={{\n            strokeOpacity: 0.6\n          }}\n        >\n          {node !== false && node.title !== \"root\" ? (\n            <LabelSeries\n              data={[\n                {\n                  x: 0,\n                  y: 0,\n                  label:\n                    node.size !== undefined\n                      ? `size: ${node.size}`\n                      : `size: ${getFreqency(node)}`,\n                  yOffset: -40\n                }\n              ]}\n              labelAnchorX={\"middle\"}\n              style={{\n                fontSize: \"24px\",\n                backgroundColor: \"white\",\n                padding: \"20px\",\n                width: \"360px\"\n              }}\n            />\n          ) : null}\n          {tooltip.map((item, index) => (\n            <LabelSeries\n              data={[\n                {\n                  x: 0,\n                  y: -(index + 1) * 20,\n                  label: item,\n                  yOffset: -20\n                }\n              ]}\n              labelAnchorX={\"middle\"}\n              style={{\n                backgroundColor: \"white\",\n                padding: \"20px\",\n                width: \"360px\"\n              }}\n            />\n          ))}\n        </Sunburst>\n        <Grid\n          container\n          item\n          justify={\"space-between\"}\n          direction={\"column\"}\n          style={{\n            height: \"680px\",\n            position: \"absolute\",\n            width: \"240px\",\n            margin: \"20px\"\n          }}\n        >\n          <Grid item direction={\"column\"}>\n            <Typography>First-Category</Typography>\n            <Selector data={props.data} target={\"x\"} />\n            <br />\n            <Typography>Second-Category</Typography>\n            <Selector data={props.data} target={\"y\"} />\n          </Grid>\n          <Grid item>\n            <Reset />\n          </Grid>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Advanced;\n","// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport { AmbientLight, PointLight, LightingEffect } from \"@deck.gl/core\";\n\nconst ambientLight = new AmbientLight({\n  color: [255, 255, 255],\n  intensity: 1.0\n});\n\nconst pointLight1 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-0.144528, -49.739968, 80000]\n});\n\nconst pointLight2 = new PointLight({\n  color: [255, 255, 255],\n  intensity: 0.8,\n  position: [-3.807751, -54.104682, 8000]\n});\n\nconst lightingEffect = new LightingEffect({\n  ambientLight,\n  pointLight1,\n  pointLight2\n});\n\nexport default lightingEffect;\n","import React, { useState } from \"react\";\nimport DeckGL from \"@deck.gl/react\";\nimport { HexagonLayer } from \"@deck.gl/aggregation-layers\";\nimport StaticMap from \"react-map-gl\";\nimport { useQuery, useApolloClient } from \"@apollo/react-hooks\";\nimport { gql } from \"apollo-boost\";\nimport lightingEffect from \"../utils/lightingEffect\";\nimport { makeStyles, Box, Grid, Typography, Slider } from \"@material-ui/core\";\nimport Selector from \"./Selector\";\n\ntype Props = { data: any[] };\n\nconst query = gql`\n  query @client {\n    x {\n      value\n      __typename\n    }\n    z {\n      value\n      __typename\n    }\n  }\n`;\n\nconst material = {\n  ambient: 0.4,\n  diffuse: 0.8,\n  shininess: 40,\n  specularColor: [32, 48, 64]\n};\n\nconst colorRange = [\n  [1, 152, 189],\n  [73, 227, 206],\n  [216, 254, 181],\n  [254, 237, 177],\n  [254, 173, 84],\n  [209, 55, 78]\n];\n\nconst useStyles = makeStyles({\n  map: {\n    position: \"relative\",\n    height: \"720px\"\n  }\n});\n\nconst Basic: React.FC<Props> = (props: Props) => {\n  const client = useApolloClient();\n  const classes = useStyles();\n  const MAPBOX_TOKEN =\n    \"pk.eyJ1Ijoia2VtYWtpbm8iLCJhIjoiY2s1aHJkeWVpMDZzbDNubzltem80MGdnZSJ9.Mn_8DItICHFJyiPJ2rP_0Q\";\n\n  const [state, setState] = useState({\n    hoveredObject: undefined,\n    pointerX: 0,\n    pointerY: 0\n  });\n\n  const [threshold, setThreshold] = useState(100);\n\n  const { data } = useQuery(query);\n  const plotData =\n    data.z.value === \"\"\n      ? props.data.map(item => ({ lat: Number(item.Y), lng: Number(item.X) }))\n      : props.data\n          .filter(\n            item =>\n              item[data.x.value as keyof typeof props.data[0]] === data.z.value\n          )\n          .map(item => ({ lat: Number(item.Y), lng: Number(item.X) }));\n\n  const [view, setView] = React.useState({\n    latitude: 37.74,\n    longitude: -122.42,\n    zoom: 12,\n    pitch: 60,\n    bearing: -30\n  });\n\n  const onHover = ({ object, x, y }: any) => {\n    if (object === null) setState({ ...state, hoveredObject: undefined });\n    else\n      setState({\n        hoveredObject: object,\n        pointerX: x,\n        pointerY: y\n      });\n  };\n\n  const onClick = () => {\n    if (data.x.value !== \"\" && data.z.value !== \"\") {\n      client.writeData({\n        data: {\n          xt: {\n            value: data.x.value !== \"\" ? data.x.value : \"\",\n            __typename: \"selection\"\n          },\n          zt: {\n            value: data.z.value !== \"\" ? data.z.value : \"\",\n            __typename: \"selection\"\n          }\n        }\n      });\n    }\n  };\n\n  const hexagon = new HexagonLayer({\n    id: \"heatmap\",\n    colorRange,\n    coverage: 0.9,\n    data: plotData,\n    pickable: true,\n    elevationRange: [0, 250],\n    elevationScale: 10,\n    extruded: true,\n    getPosition: (obj: { lng: any; lat: any }) => [obj.lng, obj.lat],\n    radius: 100,\n    upperPercentile: threshold,\n    material: material,\n    onHover: onHover,\n    onClick: onClick\n  });\n\n  const handleChange = (_event: any, value: any) => {\n    setThreshold(value);\n  };\n\n  return (\n    <Box className={classes.map}>\n      <DeckGL\n        viewState={view}\n        width={1280}\n        height={720}\n        layers={[hexagon]}\n        effects={[lightingEffect]}\n        controller\n        onViewStateChange={({ viewState }) => setView(viewState)}\n      >\n        <StaticMap\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n          width={960}\n          height={600}\n          mapStyle={\"mapbox://styles/mapbox/dark-v9\"}\n        />\n        {state.hoveredObject !== undefined ? (\n          <div\n            style={{\n              position: \"absolute\",\n              zIndex: 1,\n              left: state.pointerX + 20,\n              top: state.pointerY,\n              padding: \"0.5rem\",\n              backgroundColor: \"#FFFFFF\"\n            }}\n          >\n            value: {(state.hoveredObject! as any).elevationValue}\n          </div>\n        ) : null}\n      </DeckGL>\n      <Grid\n        container\n        direction={\"column\"}\n        style={{ position: \"absolute\", width: \"240px\", margin: \"20px\" }}\n      >\n        <Typography style={{ color: \"white\" }}>Category</Typography>\n        <Selector data={props.data} target={\"x\"} />\n        <br />\n        <Typography style={{ color: \"white\" }}>Value</Typography>\n        <Selector\n          data={props.data}\n          target={\"z\"}\n          category={data.x.value !== \"\" ? data.x.value : undefined}\n        />\n        <br />\n        <Typography style={{ color: \"white\" }}>Remove Outliers</Typography>\n        <Slider\n          defaultValue={100}\n          max={100}\n          min={80}\n          onChange={handleChange}\n          style={{ color: \"#FFF2CC\", width: \"240px\" }}\n        />\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Basic;\n","import React from \"react\";\nimport \"./App.css\";\nimport Advanced from \"./components/Advanced\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"@apollo/react-hooks\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport Basic from \"./components/Basic\";\n\nimport data from \"./data/data2.json\";\nimport { makeStyles, AppBar, Grid, Typography, Box } from \"@material-ui/core\";\n\nconst cache = new InMemoryCache();\nconst client = new ApolloClient({ cache });\n\ncache.writeData({\n  data: {\n    x: { value: \"\", __typename: \"selection\" },\n    y: { value: \"\", __typename: \"selection\" },\n    z: { value: \"\", __typename: \"selection\" },\n    xt: { value: \"\", __typename: \"selection\" },\n    zt: { value: \"\", __typename: \"selection\" }\n  }\n});\n\nconst useStyles = makeStyles({\n  appBar: {\n    backgroundColor: \"#002855\"\n  },\n  container: {\n    fontFamily: \"roboto, Arial, Helvetica, sans-serif !important\",\n    color: \"#222\",\n    backgroundColor: \"#FBF6E5\",\n    textAlign: \"justify\"\n  },\n  header: {\n    margin: \"5rem 0 1rem 0\",\n    padding: \"0 3rem\",\n    borderBottom: \"6px double #002855\"\n  },\n  vis: {\n    backgroundColor: \"#F4E5B2\",\n    borderTop: \"1px solid #DAAA00\",\n    borderBottom: \"1px solid #DAAA00\",\n    margin: \"1rem 0\",\n    padding: \"1rem 3rem\",\n    \"& .rv-xy-plot\": {\n      backgroundColor: \"#FFFFFF\"\n    }\n  }\n});\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <div className=\"App\">\n      <ApolloProvider client={client}>\n        <AppBar position=\"sticky\" className={classes.appBar}>\n          <Grid container justify={\"space-between\"} alignItems={\"center\"}>\n            <Typography variant=\"h5\" style={{ margin: \"1rem 3rem\" }}>\n              ECS272-2020 Assignment 3\n            </Typography>\n            <Typography variant=\"body1\" style={{ margin: \"1rem 3rem\" }}>\n              Keita Makino\n            </Typography>\n          </Grid>\n        </AppBar>\n        <Grid container className={classes.container} justify={\"center\"}>\n          <Typography variant=\"h4\" className={classes.header}>\n            1: Crime Distribution in SF City\n          </Typography>\n          <Grid\n            container\n            item\n            justify={\"space-between\"}\n            className={classes.vis}\n          >\n            <Box width={\"480px\"}>\n              <Typography variant={\"body1\"}>\n                This hexgrid map displays the geographical distribution of\n                crimes in San Francisco in 2016. By selecting the category and\n                value, users can narrow down the selection of the data and see\n                how crimes with a certain condition are located throughout the\n                city.\n              </Typography>\n              <br />\n              <Typography variant={\"body1\"}>\n                When a user hovers mouse over a bin, it will display the number\n                of crimes identified in the location. Also, clicking any bin\n                with both category and value being set will narrow down the data\n                which will be used in the next sunburst chart.\n              </Typography>\n              <br />\n              <Typography variant={\"body1\"}>\n                Also, users may trim the data by manipulating the slider. This\n                is typically useful when there are some outliers in the map (as\n                shown in the default view).\n              </Typography>\n            </Box>\n            <Box width={\"1280px\"}>\n              <Basic data={data as any[]} />\n            </Box>\n          </Grid>\n          <Typography variant=\"h4\" className={classes.header}>\n            2: Crime Share in SF City\n          </Typography>\n          <Grid\n            container\n            item\n            justify={\"space-between\"}\n            className={classes.vis}\n          >\n            <Box width={\"480px\"}>\n              <Typography variant={\"body1\"}>\n                This sunburst chart illustrates the share of crimes under a\n                certain condition in San Francisco city.\n              </Typography>\n              <br />\n              <Typography variant={\"body1\"}>\n                Selecting the first category will make a pie chart which\n                displays the share of crimes with one condition. Then, users can\n                get more detailed information by selecting the second category,\n                which makes a two-layered pie chart (i.e., sunburst chart).\n              </Typography>\n              <br />\n              <Typography variant={\"body1\"}>\n                When a user hovers mouse onto an area of the chart, it will\n                highlight the areas which has same parameter at the perimeter.\n                It will be useful when a user want to compare the share of one\n                attribute in different condition (e.g., comparison of the share\n                of \"assault\" crimes over police districts).\n              </Typography>\n              <br />\n              <Typography variant={\"body1\"}>\n                The label at the center will give the size of the area currently\n                hovered over, and the \"path\" which represents the current\n                condition. The reset button will re-initialize the state of the\n                visualization, including the first one.\n              </Typography>\n              <br />\n              <Typography variant={\"body1\"}>\n                Note that, if there are more than 25 unique values in each\n                category, the app will omit the less-frequent categories.\n              </Typography>\n            </Box>\n            <Box width={\"1280px\"}>\n              <Advanced data={data as any[]} />\n            </Box>\n          </Grid>\n        </Grid>\n      </ApolloProvider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}